class WordDistance {
    Map <String, List<Integer>> map;
    public WordDistance(String[] words) {
        map = new HashMap<>();
        for(int i = 0; i < words.length; i++) {
            String word = words[i];
            if(!map.containsKey(word)) {
                map.put(word, new ArrayList<Integer>());
            }                 
                map.get(word).add(i);                        
        }
    }
    
    public int shortest(String word1, String word2) {
        int min = Integer.MAX_VALUE;
        List<Integer> l1 = map.get(word1);
        List<Integer> l2 = map.get(word2);
        int i = 0, j = 0;
        while(i < l1.size() && j < l2.size()) {
            int val1 = l1.get(i);
            int val2 = l2.get(j);
            if(val1 < val2) {
                min = Math.min(min, val2 - val1);
                i++;
            } else {
                min = Math.min(min, val1 - val2);
                j++;
            }
        }
        return min;
    }
}

/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance obj = new WordDistance(words);
 * int param_1 = obj.shortest(word1,word2);
 */

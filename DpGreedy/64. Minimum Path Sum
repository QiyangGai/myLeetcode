class Solution {
    public int minPathSum(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] dp = new int[m + 1][n + 1];
        for(int i = 1; i <= m; i++) {
            dp[i][1] = dp[i - 1][1] + grid[i - 1][0];
        }
        for(int j = 1; j <= n; j++) {
            dp[1][j] = dp[1][j - 1] + grid[0][j - 1];
        }
        
        for(int i = 2; i <= m; i++) {
            for(int j = 2; j <= n; j++) {
                int top = dp[i - 1][j];
                int left = dp[i][j - 1];
                dp[i][j] = Math.min(top, left) + grid[i- 1][j - 1];
            }
        }
        return dp[m][n];
    }
}

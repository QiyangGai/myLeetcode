class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> res = new ArrayList<>();
        if(numRows <= 0)
            return res;

        List<Integer> list = new ArrayList<>();
        list.add(1);
        res.add(list);
        
        for(int i = 1; i <= numRows - 1; i++) {
            List<Integer> temp = new ArrayList<>();
            temp.add(1);
            for(int j=1; j <= i - 1; j++) {
                temp.add(res.get(i - 1).get(j) + res.get(i - 1).get(j - 1));
            }
            temp.add(1);
            res.add(temp);
        }
        return res;
    }
}

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        if (numRows == 0) {
            return result;
        }
        result.add(new ArrayList<Integer>());
        result.get(0).add(1);
        for (int i = 0; i < numRows - 1; i++) {
            List<Integer> last = result.get(result.size() - 1);
            List<Integer> newOne = new ArrayList<Integer>();
            newOne.add(1);
            for (int j = 0; j < last.size() - 1; j++) {
                newOne.add(last.get(j) + last.get(j + 1));
            }
            newOne.add(1);
            result.add(new ArrayList<Integer>(newOne));
        }
        return result;
    }
}

class SummaryRanges {
    TreeMap<Integer, int[]> map;
    
    /** Initialize your data structure here. */
    public SummaryRanges() {
        map = new TreeMap<>();    
    }
    
    public void addNum(int val) {
        if(map.containsKey(val)) return;
        Integer left = map.lowerKey(val);
        Integer right = map.higherKey(val);  
        if(left != null && right != null && map.get(left)[1] == val - 1 && map.get(right)[0] == val + 1) {
            map.get(left)[1] = map.get(right)[1];
            map.remove(right);
        } else if(left != null && map.get(left)[1] + 1 >= val) {
            map.get(left)[1] = Math.max(map.get(left)[1], val);
        } else if(right != null && right - 1 == val) {
            map.put(val, new int[] {val, map.get(right)[1]});
            map.remove(right);
        } else {
            map.put(val, new int[] {val, val});
        }
    }
    
    public int[][] getIntervals() {
         int[][] result = new int[map.size()][2];
        int i = 0;
        for(Map.Entry<Integer,int[]> entry : map.entrySet()) {
            
            result[i] = entry.getValue();
            i++;
        }
        return result;
    }
}

/**
 * Your SummaryRanges object will be instantiated and called as such:
 * SummaryRanges obj = new SummaryRanges();
 * obj.addNum(val);
 * int[][] param_2 = obj.getIntervals();
 */

public class Solution {
    public int wiggleMaxLength(int[] nums) {
        if (nums.length < 2)
            return nums.length;
        int prevdiff = nums[1] - nums[0];
        int count = prevdiff != 0 ? 2 : 1;
        for (int i = 2; i < nums.length; i++) {
            int diff = nums[i] - nums[i - 1];
            if ((diff > 0 && prevdiff <= 0) || (diff < 0 && prevdiff >= 0)) {
                count++;
                prevdiff = diff;
            }
        }
        return count;
    }
}
/////////////////////////////////////////////////////////////////////////////////////////////
class Solution {
    public int wiggleMaxLength(int[] nums) {
        if(nums.length == 0 || nums.length == 1) return nums.length;
        int k = 0;
       		while (k < nums.length - 1 && nums[k] == nums[k + 1]) {  //Skips all the same numbers from series beginning eg 5, 5, 5, 1
			k++;
		}
		if (k == nums.length - 1) {
			return 1;
		}

        int result = 2;
        boolean down = nums[k] > nums[k + 1];
        for(int i = k + 1; i < nums.length - 1; i++) {
            if (down && nums[i + 1] > nums[i]) {
				nums[result] = nums[i + 1];
				result++;
				down = !down;
            } else if(!down && nums[i + 1] < nums[i]){
                nums[result] = nums[i + 1];
				result++;
				down = !down;
            }
        }
        return result;
    }
}

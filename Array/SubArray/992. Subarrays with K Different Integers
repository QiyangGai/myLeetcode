class Solution {
    public int subarraysWithKDistinct(int[] A, int K) {
        return atMostK(A, K) - atMostK(A, K - 1);
    }
    int atMostK(int[] A, int K) {
        int i = 0;
        int res = 0; 
        int count = 0;
        Map<Integer, Integer> map = new HashMap<>();
        for (int j = 0; j < A.length; ++j) {
            if (map.getOrDefault(A[j], 0) == 0) count++;
            map.put(A[j], map.getOrDefault(A[j], 0) + 1);
            while (count > K) {
                map.put(A[i], map.get(A[i]) - 1);
                if (map.get(A[i]) == 0) count--;
                i++;
            }
            res += j - i + 1;
        }
        return res;
    }
}

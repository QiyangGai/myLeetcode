class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> res = new LinkedList <> ();
        Arrays.sort(nums);
        helper(nums, 0, new LinkedList <Integer> (), res);
        return res;
    }
    private void helper(int[] nums, int level, List<Integer> temp, List<List<Integer>> res) {       
        if(level == nums.length) {            
            res.add(new LinkedList<Integer>(temp));
            return;    
        }       
        temp.add(nums[level]);
        helper(nums, level + 1, temp, res);        
        if(temp.size() >1 && temp.get(temp.size() - 1) == temp.get(temp.size() - 2)) {
            temp.remove(temp.size() - 1);
            return;
        } else {
            temp.remove(temp.size() - 1);
            helper(nums, level + 1, temp, res);
        }
                
    }
}

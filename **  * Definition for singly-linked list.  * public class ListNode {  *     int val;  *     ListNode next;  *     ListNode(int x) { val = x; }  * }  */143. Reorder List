/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
        if(head == null || head.next ==null || head.next.next == null) { 
            return;
        }
        ListNode slow = head;
        ListNode fast = head;
        while(fast.next != null && fast.next.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode pre = slow;
        ListNode cur = slow.next;
        while(cur != null) {
            ListNode temp = cur.next;
            cur.next = pre;
            pre = cur;
            cur = temp;
        }
        slow = head;
        while(pre.next != slow && slow != pre) {
            ListNode temp1 = slow.next;
            slow.next = pre;
            ListNode temp2 = pre.next;
            pre.next = temp1;
            slow = temp1;
            pre = temp2;
        }
        if(pre.next ==slow) {
            slow.next = pre;
            slow.next.next = null;
        }else {
            slow.next = null;
        }
      
    }
}

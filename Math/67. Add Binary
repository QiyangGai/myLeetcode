class Solution {
    public String addBinary(String a, String b) {
        StringBuilder res = new StringBuilder();
        int m = a.length();
        int n = b.length();  
        boolean carry = false;        
        for(int i = 0; i < Math.max(m, n); i++) {
            int A = i < m ? (a.charAt(m - 1 - i) - '0') : 0;
            int B = i < n ? (b.charAt(n - 1 - i) - '0'): 0;
            if(carry == false) {
                if(A + B == 0) {
                    res.insert(0, 0);                    
                } else if(A + B == 1) {
                    res.insert(0, 1);                    
                } else {
                    res.insert(0, 0);
                    carry = true;
                }
            } else {
                if(A + B == 0) {
                    res.insert(0, 1);                    
                    carry = false;
                } else if(A + B == 1) {
                    res.insert(0, 0); 
                    
                } else {
                    res.insert(0, 1);                    
                }            
            }
        }
        if(carry) res.insert(0, 1);
        return res.toString();
    }
}
///////////////////////////////////////////////////////////////////
public class Solution {
    public String addBinary(String a, String b) {
        StringBuilder sb = new StringBuilder();
        int i = a.length() - 1, j = b.length() -1, carry = 0;
        while (i >= 0 || j >= 0) {
            int sum = carry;
            if (j >= 0) sum += b.charAt(j--) - '0';
            if (i >= 0) sum += a.charAt(i--) - '0';
            sb.append(sum % 2);
            carry = sum / 2;
        }
        if (carry != 0) sb.append(carry);
        return sb.reverse().toString();
    }
}

class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> res = new ArrayList<>();
        int len1 = s.length();
        int len2 = p.length();
        if(len2 > len1) {
            return res;
        }
        Map<Character, Integer> map = new HashMap<>();
        for(int i = 0; i < p.length(); i++) {
            char letter = p.charAt(i);
            map.put(letter, map.getOrDefault(letter, 0) + 1);
        } 
        int count = map.size();
        int left = 0;
        int right = 0;
        for(int i = 0 ; i < p.length(); i++) {
            char sl = s.charAt(i);
            if(map.containsKey(sl)) {
                map.put(sl, map.get(sl) - 1);
                if(map.get(sl) == 0) {
                    count--;
                }
            }
        }
        if(count == 0) {
            res.add(0);
        }
        for(int i = len2; i < len1; i++) {
            char inChar = s.charAt(i);
            char outChar = s.charAt(i - len2);
            if(map.containsKey(inChar)) {
                map.put(inChar, map.get(inChar) - 1);
                if(map.get(inChar) == 0) {
                    count--;
                }
            }
            if(map.containsKey(outChar)) {
                    map.put(outChar, map.get(outChar) +1);
                    if(map.get(outChar) == 1) {
                        count++;
                    }
                }
            if(count == 0) {
                res.add(i - len2 + 1);
            }
        }
        return res;
    }
}

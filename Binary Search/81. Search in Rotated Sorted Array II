class Solution {
        public boolean search(int[] nums, int target) {
        int low = 0, high = nums.length - 1;
        if(nums.length == 0) return false;
        if(nums[low] == target || nums[high] == target) return true;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            if(nums[mid] == target) {
                return true;    
            } else if(nums[low] == nums[high]) {
                low++;                                        
            } else if(nums[low] > nums[high] && nums[high] >= target) {
                    if(nums[mid] >= nums[low]) {
                        low = mid + 1;
                    } else if(nums[mid] < target) {
                        low = mid + 1;
                    } else {
                        high = mid - 1;
                    }
                
            } else if(target >= nums[low] && nums[low] > nums[high]) {
                if(nums[mid] <= nums[high]) {
                    high = mid - 1;
                } else if(nums[mid] > target) {
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            } else if(nums[mid] < target) {
                low = mid + 1;
            } else {
                high = mid - 1;
            } 
        }
        return false;
    }
}

---------------------------------------------------------------------------------
class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: bool
        """
        left, right = 0, len(nums) - 1
        while left <= right :
            mid = (left+right) / 2
            if nums[mid] == target : return True
            if nums[mid] == nums[left] : left += 1
            elif nums[mid] > nums[left] :
                if nums[mid] > target and nums[left] <= target :
                    right = mid - 1
                else : left = mid + 1
            else :
                if nums[mid] < target and nums[right] >= target :
                    left = mid + 1
                else : right = mid - 1

--------------------- 
作者：Code_Granker 
来源：CSDN 
原文：https://blog.csdn.net/happyaaaaaaaaaaa/article/details/51602234 
版权声明：本文为博主原创文章，转载请附上博文链接！

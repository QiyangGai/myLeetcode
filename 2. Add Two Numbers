/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode result = addTwoNumbers(l1, l2, 0);
        
        if (result == null) {
            return new ListNode(0);
        }
        return result;
    }

    private ListNode addTwoNumbers(ListNode l1, ListNode l2, int increment) {
        if (l1==null && l2==null) {
            if (increment>0) {
                return new ListNode(increment);
            } else {
                return null;
            }
        }
        
        if (l1==null && l2!=null) {
            int newVal = (l2.val + increment) % 10;
            int newIncrement = (l2.val + increment) /10;

            ListNode current = new ListNode(newVal);
            current.next = addTwoNumbers(null, l2.next, newIncrement);
            return current;            
        }

        if (l1!=null && l2==null) {
            int newVal = (l1.val + increment) % 10;
            int newIncrement = (l1.val + increment) /10;

            ListNode current = new ListNode(newVal);
            current.next = addTwoNumbers(l1.next, null, newIncrement);
            return current;            
        }

        int newVal = (l1.val + l2.val + increment) % 10;
        int newIncrement = (l1.val + l2.val + increment) /10;
        
        ListNode current = new ListNode(newVal);
        current.next = addTwoNumbers(l1.next, l2.next, newIncrement);
        return current;
    }
    
}

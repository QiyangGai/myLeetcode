/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> s1 = new Stack<Integer>();
        Stack<Integer> s2 = new Stack<Integer>();
        
        while(l1 != null) {
            s1.push(l1.val);
            l1 = l1.next;
        };
        while(l2 != null) {
            s2.push(l2.val);
            l2 = l2.next;
        }
        
        int carry = 0;
        
       
        ListNode cur = new ListNode(0);
        while (!s1.empty() || !s2.empty()) {
            int x = (!s1.isEmpty()) ? s1.pop() : 0;
            int y = (!s2.isEmpty()) ? s2.pop() : 0;
            int sum = carry + x + y;
            carry = sum / 10;
            cur.val = sum % 10;
            ListNode head = new ListNode(1);
            head.next = cur;
            cur = head;
            
        }
             
        return (carry == 0) ? cur.next : cur;
    }
}
